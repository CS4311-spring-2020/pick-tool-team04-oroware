from PyQt5 import QtCore, QtWidgets, QtGui
from PyQt5.QtCore import pyqtSignal, QObject
from PyQt5.QtWidgets import QTableWidgetItem
from GraphWidget import GraphWidget
import sys
import datetime
import xlwt

from LogEntry import LogEntry
from LogEntryPopup import LogEntryPopup
from Globals import logEntryManager
from Globals import vectorManager
from RelationshipPopup import RelationshipPopup
from SignificantEventPopup import SignificantEventPopup


class Ui_PICK(object):

    def setupMainWindow(self, PICK):
        self.mainWindow = QtWidgets.QWidget(PICK)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mainWindow.sizePolicy().hasHeightForWidth())
        self.mainWindow.setSizePolicy(sizePolicy)
        self.mainWindow.setMinimumSize(QtCore.QSize(0, 0))
        self.mainWindow.setSizeIncrement(QtCore.QSize(0, 0))
        self.mainWindow.setObjectName("mainWindow")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.mainWindow)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
        self.verticalLayout.setObjectName("verticalLayout")

    def setupTabWidget(self, PICK):
        self.tabWidget = QtWidgets.QTabWidget(self.mainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setObjectName("tabWidget")

    def setupIngestionTab(self, PICK):
        self.ingestionTab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ingestionTab.sizePolicy().hasHeightForWidth())
        self.ingestionTab.setSizePolicy(sizePolicy)
        self.ingestionTab.setObjectName("ingestionTab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.ingestionTab)
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.setup = QtWidgets.QFrame(self.ingestionTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setup.sizePolicy().hasHeightForWidth())
        self.setup.setSizePolicy(sizePolicy)
        self.setup.setMinimumSize(QtCore.QSize(0, 0))
        self.setup.setSizeIncrement(QtCore.QSize(0, 0))
        self.setup.setAutoFillBackground(False)
        self.setup.setFrameShape(QtWidgets.QFrame.Box)
        self.setup.setObjectName("setup")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.setup)
        self.verticalLayout_4.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.setupLabel = QtWidgets.QLabel(self.setup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setupLabel.sizePolicy().hasHeightForWidth())
        self.setupLabel.setSizePolicy(sizePolicy)
        self.setupLabel.setObjectName("setupLabel")
        self.verticalLayout_4.addWidget(self.setupLabel)
        self.rootPathLabel = QtWidgets.QLabel(self.setup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rootPathLabel.sizePolicy().hasHeightForWidth())
        self.rootPathLabel.setSizePolicy(sizePolicy)
        self.rootPathLabel.setObjectName("rootPathLabel")
        self.verticalLayout_4.addWidget(self.rootPathLabel)
        self.rootPathTextEdit = QtWidgets.QPlainTextEdit(self.setup)
        self.rootPathTextEdit.setMaximumSize(QtCore.QSize(16777215, 40))
        self.rootPathTextEdit.setObjectName("rootPathTextEdit")
        self.verticalLayout_4.addWidget(self.rootPathTextEdit)
        self.confirmPathButton = QtWidgets.QPushButton(self.setup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.confirmPathButton.sizePolicy().hasHeightForWidth())
        self.confirmPathButton.setSizePolicy(sizePolicy)
        self.confirmPathButton.setObjectName("confirmPathButton")
        self.verticalLayout_4.addWidget(self.confirmPathButton)
        self.setLeadButton = QtWidgets.QPushButton(self.setup)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.setLeadButton.sizePolicy().hasHeightForWidth())
        self.setLeadButton.setSizePolicy(sizePolicy)
        self.setLeadButton.setObjectName("setLeadButton")
        self.verticalLayout_4.addWidget(self.setLeadButton)
        self.verticalLayout_2.addWidget(self.setup)
        self.vectorInformation = QtWidgets.QFrame(self.ingestionTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorInformation.sizePolicy().hasHeightForWidth())
        self.vectorInformation.setSizePolicy(sizePolicy)
        self.vectorInformation.setFrameShape(QtWidgets.QFrame.Box)
        self.vectorInformation.setObjectName("vectorInformation")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.vectorInformation)
        self.verticalLayout_5.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.vectorInformationLabel = QtWidgets.QLabel(self.vectorInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorInformationLabel.sizePolicy().hasHeightForWidth())
        self.vectorInformationLabel.setSizePolicy(sizePolicy)
        self.vectorInformationLabel.setObjectName("vectorInformationLabel")
        self.verticalLayout_5.addWidget(self.vectorInformationLabel)
        self.vectorNameLabel = QtWidgets.QLabel(self.vectorInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorNameLabel.sizePolicy().hasHeightForWidth())
        self.vectorNameLabel.setSizePolicy(sizePolicy)
        self.vectorNameLabel.setObjectName("vectorNameLabel")
        self.verticalLayout_5.addWidget(self.vectorNameLabel)
        self.vectorComboBoxIngestion = QtWidgets.QComboBox(self.vectorInformation)
        self.vectorComboBoxIngestion.setModel(QtGui.QStandardItemModel())
        self.vectorComboBoxIngestion.view().pressed.connect(self.handleVectorComboBoxIngestion)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorComboBoxIngestion.sizePolicy().hasHeightForWidth())
        self.vectorComboBoxIngestion.setSizePolicy(sizePolicy)
        self.vectorComboBoxIngestion.setObjectName("vectorComboBoxLabel")
        self.verticalLayout_5.addWidget(self.vectorComboBoxIngestion)
        self.vectorDescriptionLabel = QtWidgets.QLabel(self.vectorInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorDescriptionLabel.sizePolicy().hasHeightForWidth())
        self.vectorDescriptionLabel.setSizePolicy(sizePolicy)
        self.vectorDescriptionLabel.setObjectName("vectorDescriptionLabel")
        self.verticalLayout_5.addWidget(self.vectorDescriptionLabel)
        self.vectorDescriptionTextEdit = QtWidgets.QPlainTextEdit(self.vectorInformation)
        self.vectorDescriptionTextEdit.setMaximumSize(QtCore.QSize(16777215, 60))
        self.vectorDescriptionTextEdit.setObjectName("vectorDescriptionTextEdit")
        self.verticalLayout_5.addWidget(self.vectorDescriptionTextEdit)
        self.deleteVectorButton = QtWidgets.QPushButton(self.vectorInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deleteVectorButton.sizePolicy().hasHeightForWidth())
        self.deleteVectorButton.setSizePolicy(sizePolicy)
        self.deleteVectorButton.setObjectName("deleteVectorButton")
        self.verticalLayout_5.addWidget(self.deleteVectorButton)
        self.editVectorButton = QtWidgets.QPushButton(self.vectorInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.editVectorButton.sizePolicy().hasHeightForWidth())
        self.editVectorButton.setSizePolicy(sizePolicy)
        self.editVectorButton.setObjectName("editVectorButton")
        self.verticalLayout_5.addWidget(self.editVectorButton)
        self.addVectorButton = QtWidgets.QPushButton(self.vectorInformation)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addVectorButton.sizePolicy().hasHeightForWidth())
        self.addVectorButton.setSizePolicy(sizePolicy)
        self.addVectorButton.setObjectName("addVectorButton")
        self.verticalLayout_5.addWidget(self.addVectorButton)
        self.verticalLayout_2.addWidget(self.vectorInformation)
        self.eventConfiguration = QtWidgets.QFrame(self.ingestionTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eventConfiguration.sizePolicy().hasHeightForWidth())
        self.eventConfiguration.setSizePolicy(sizePolicy)
        self.eventConfiguration.setFrameShape(QtWidgets.QFrame.Box)
        self.eventConfiguration.setObjectName("eventConfiguration")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.eventConfiguration)
        self.verticalLayout_3.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.eventConfigurationLabel = QtWidgets.QLabel(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.eventConfigurationLabel.sizePolicy().hasHeightForWidth())
        self.eventConfigurationLabel.setSizePolicy(sizePolicy)
        self.eventConfigurationLabel.setObjectName("eventConfigurationLabel")
        self.verticalLayout_3.addWidget(self.eventConfigurationLabel)
        self.fromEventConfigurationLabel = QtWidgets.QLabel(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromEventConfigurationLabel.sizePolicy().hasHeightForWidth())
        self.fromEventConfigurationLabel.setSizePolicy(sizePolicy)
        self.fromEventConfigurationLabel.setObjectName("fromEventConfigurationLabel")
        self.verticalLayout_3.addWidget(self.fromEventConfigurationLabel)
        self.fromDateTimeEditEventConfig = QtWidgets.QDateTimeEdit(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromDateTimeEditEventConfig.sizePolicy().hasHeightForWidth())
        self.fromDateTimeEditEventConfig.setSizePolicy(sizePolicy)
        self.fromDateTimeEditEventConfig.setObjectName("fromDateTimeEditEventConfig")
        self.verticalLayout_3.addWidget(self.fromDateTimeEditEventConfig)
        self.toEventConfigurationLabel = QtWidgets.QLabel(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toEventConfigurationLabel.sizePolicy().hasHeightForWidth())
        self.toEventConfigurationLabel.setSizePolicy(sizePolicy)
        self.toEventConfigurationLabel.setObjectName("toEventConfigurationLabel")
        self.verticalLayout_3.addWidget(self.toEventConfigurationLabel)
        self.toDateTimeEditEventConfig = QtWidgets.QDateTimeEdit(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toDateTimeEditEventConfig.sizePolicy().hasHeightForWidth())
        self.toDateTimeEditEventConfig.setSizePolicy(sizePolicy)
        self.toDateTimeEditEventConfig.setObjectName("toDateTimeEditEventConfig")
        self.verticalLayout_3.addWidget(self.toDateTimeEditEventConfig)
        self.teamSubdirectoryNamesLabel = QtWidgets.QLabel(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.teamSubdirectoryNamesLabel.sizePolicy().hasHeightForWidth())
        self.teamSubdirectoryNamesLabel.setSizePolicy(sizePolicy)
        self.teamSubdirectoryNamesLabel.setObjectName("teamSubdirectoryNamesLabel")
        self.verticalLayout_3.addWidget(self.teamSubdirectoryNamesLabel)
        self.redTeamEventConfigLabel = QtWidgets.QLabel(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.redTeamEventConfigLabel.sizePolicy().hasHeightForWidth())
        self.redTeamEventConfigLabel.setSizePolicy(sizePolicy)
        self.redTeamEventConfigLabel.setObjectName("redTeamEventConfigLabel")
        self.verticalLayout_3.addWidget(self.redTeamEventConfigLabel)
        self.redTeamDirTextEdit = QtWidgets.QPlainTextEdit(self.eventConfiguration)
        self.redTeamDirTextEdit.setMaximumSize(QtCore.QSize(16777215, 40))
        self.redTeamDirTextEdit.setObjectName("redTeamDirTextEdit")
        self.verticalLayout_3.addWidget(self.redTeamDirTextEdit)
        self.whiteTeamEventConfigLabel = QtWidgets.QLabel(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.whiteTeamEventConfigLabel.sizePolicy().hasHeightForWidth())
        self.whiteTeamEventConfigLabel.setSizePolicy(sizePolicy)
        self.whiteTeamEventConfigLabel.setObjectName("whiteTeamEventConfigLabel")
        self.verticalLayout_3.addWidget(self.whiteTeamEventConfigLabel)
        self.whiteTeamDirTextEdit = QtWidgets.QPlainTextEdit(self.eventConfiguration)
        self.whiteTeamDirTextEdit.setMaximumSize(QtCore.QSize(16777215, 40))
        self.whiteTeamDirTextEdit.setObjectName("whiteTeamDirTextEdit")
        self.verticalLayout_3.addWidget(self.whiteTeamDirTextEdit)
        self.blueTeamEventConfigLabel = QtWidgets.QLabel(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.blueTeamEventConfigLabel.sizePolicy().hasHeightForWidth())
        self.blueTeamEventConfigLabel.setSizePolicy(sizePolicy)
        self.blueTeamEventConfigLabel.setObjectName("blueTeamEventConfigLabel")
        self.verticalLayout_3.addWidget(self.blueTeamEventConfigLabel)
        self.blueTeamDirTextEdit = QtWidgets.QPlainTextEdit(self.eventConfiguration)
        self.blueTeamDirTextEdit.setMaximumSize(QtCore.QSize(16777215, 40))
        self.blueTeamDirTextEdit.setObjectName("blueTeamDirTextEdit")
        self.verticalLayout_3.addWidget(self.blueTeamDirTextEdit)
        self.viewInvalidLogsButton = QtWidgets.QPushButton(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.viewInvalidLogsButton.sizePolicy().hasHeightForWidth())
        self.viewInvalidLogsButton.setSizePolicy(sizePolicy)
        self.viewInvalidLogsButton.setObjectName("viewInvalidLogsButton")
        self.verticalLayout_3.addWidget(self.viewInvalidLogsButton)
        self.updateEventConfigButton = QtWidgets.QPushButton(self.eventConfiguration)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.updateEventConfigButton.sizePolicy().hasHeightForWidth())
        self.updateEventConfigButton.setSizePolicy(sizePolicy)
        self.updateEventConfigButton.setObjectName("updateEventConfigButton")
        self.verticalLayout_3.addWidget(self.updateEventConfigButton)
        self.verticalLayout_2.addWidget(self.eventConfiguration)
        self.tabWidget.addTab(self.ingestionTab, "")

    def handleVectorComboBoxIngestion(self, index):
        if self.vectorComboBoxIngestion > 0:
            global vectorManager
            self.vectorDescriptionTextEdit.setPlainText(vectorManager.vectors[index.data()].vectorDescription)

    def handleVectorComboBoxTable(self, index):
        if self.vectorComboBoxTable.count() > 0:
            global vectorManager
            currentVector = vectorManager.vectors[index.data()]
            self.updateVectorTable(currentVector)
            self.updateRelationshipTable(currentVector)
            self.updateVectorGraph(currentVector)

    def setupSearchLogsTab(self, PICK):
        self.searchLogsTab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchLogsTab.sizePolicy().hasHeightForWidth())
        self.searchLogsTab.setSizePolicy(sizePolicy)
        self.searchLogsTab.setObjectName("searchLogsTab")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.searchLogsTab)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.commandSearchLabel = QtWidgets.QLabel(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.commandSearchLabel.sizePolicy().hasHeightForWidth())
        self.commandSearchLabel.setSizePolicy(sizePolicy)
        self.commandSearchLabel.setMaximumSize(QtCore.QSize(16777215, 40))
        self.commandSearchLabel.setObjectName("commandSearchLabel")
        self.verticalLayout_6.addWidget(self.commandSearchLabel)
        self.commandSearchTextEdit = QtWidgets.QPlainTextEdit(self.searchLogsTab)
        self.commandSearchTextEdit.setMaximumSize(QtCore.QSize(16777215, 40))
        self.commandSearchTextEdit.setObjectName("commandSearchTextEdit")
        self.verticalLayout_6.addWidget(self.commandSearchTextEdit)
        self.teamSearchLabel = QtWidgets.QLabel(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.teamSearchLabel.sizePolicy().hasHeightForWidth())
        self.teamSearchLabel.setSizePolicy(sizePolicy)
        self.teamSearchLabel.setMaximumSize(QtCore.QSize(16777215, 40))
        self.teamSearchLabel.setObjectName("teamSearchLabel")
        self.verticalLayout_6.addWidget(self.teamSearchLabel)
        self.blueTeamCheckBox = QtWidgets.QCheckBox(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.blueTeamCheckBox.sizePolicy().hasHeightForWidth())
        self.blueTeamCheckBox.setSizePolicy(sizePolicy)
        self.blueTeamCheckBox.setMaximumSize(QtCore.QSize(16777215, 40))
        self.blueTeamCheckBox.setObjectName("blueTeamCheckBox")
        self.verticalLayout_6.addWidget(self.blueTeamCheckBox)
        self.whiteTeamCheckBox = QtWidgets.QCheckBox(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.whiteTeamCheckBox.sizePolicy().hasHeightForWidth())
        self.whiteTeamCheckBox.setSizePolicy(sizePolicy)
        self.whiteTeamCheckBox.setMaximumSize(QtCore.QSize(16777215, 40))
        self.whiteTeamCheckBox.setObjectName("whiteTeamCheckBox")
        self.verticalLayout_6.addWidget(self.whiteTeamCheckBox)
        self.redTeamCheckBox = QtWidgets.QCheckBox(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.redTeamCheckBox.sizePolicy().hasHeightForWidth())
        self.redTeamCheckBox.setSizePolicy(sizePolicy)
        self.redTeamCheckBox.setMaximumSize(QtCore.QSize(16777215, 40))
        self.redTeamCheckBox.setObjectName("redTeamCheckBox")
        self.verticalLayout_6.addWidget(self.redTeamCheckBox)
        self.fromSearchLabel = QtWidgets.QLabel(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromSearchLabel.sizePolicy().hasHeightForWidth())
        self.fromSearchLabel.setSizePolicy(sizePolicy)
        self.fromSearchLabel.setMaximumSize(QtCore.QSize(16777215, 40))
        self.fromSearchLabel.setObjectName("fromSearchLabel")
        self.verticalLayout_6.addWidget(self.fromSearchLabel)
        self.fromDateTimeEditSearchLogs = QtWidgets.QDateTimeEdit(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromDateTimeEditSearchLogs.sizePolicy().hasHeightForWidth())
        self.fromDateTimeEditSearchLogs.setSizePolicy(sizePolicy)
        self.fromDateTimeEditSearchLogs.setMaximumSize(QtCore.QSize(16777215, 40))
        self.fromDateTimeEditSearchLogs.setObjectName("fromDateTimeEditSearchLogs")
        self.verticalLayout_6.addWidget(self.fromDateTimeEditSearchLogs)
        self.toSearchLabel = QtWidgets.QLabel(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toSearchLabel.sizePolicy().hasHeightForWidth())
        self.toSearchLabel.setSizePolicy(sizePolicy)
        self.toSearchLabel.setMaximumSize(QtCore.QSize(16777215, 40))
        self.toSearchLabel.setObjectName("toSearchLabel")
        self.verticalLayout_6.addWidget(self.toSearchLabel)
        self.toDateTimeEditSearchLogs = QtWidgets.QDateTimeEdit(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toDateTimeEditSearchLogs.sizePolicy().hasHeightForWidth())
        self.toDateTimeEditSearchLogs.setSizePolicy(sizePolicy)
        self.toDateTimeEditSearchLogs.setMaximumSize(QtCore.QSize(16777215, 40))
        self.toDateTimeEditSearchLogs.setObjectName("toDateTimeEditSearchLogs")
        self.verticalLayout_6.addWidget(self.toDateTimeEditSearchLogs)
        self.searchButton = QtWidgets.QPushButton(self.searchLogsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchButton.sizePolicy().hasHeightForWidth())
        self.searchButton.setSizePolicy(sizePolicy)
        self.searchButton.setMaximumSize(QtCore.QSize(16777215, 40))
        self.searchButton.setObjectName("searchButton")
        self.verticalLayout_6.addWidget(self.searchButton)
        self.searchLogsTableWidget = QtWidgets.QTableWidget(self.searchLogsTab)
        self.searchLogsTableWidget.setObjectName("searchLogsTableWidget")
        self.searchLogsTableWidget.setColumnCount(0)
        self.searchLogsTableWidget.setRowCount(0)
        self.verticalLayout_6.addWidget(self.searchLogsTableWidget)
        self.tabWidget.addTab(self.searchLogsTab, "")

    def updateLogTable(self):
        global logEntryManager
        logEntries = logEntryManager.logEntriesInTable
        totalRows = len(logEntries)
        self.searchLogsTableWidget.setColumnCount(len(self.colsSearchLogsTable))
        self.searchLogsTableWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.searchLogsTableWidget.setRowCount(totalRows)
        header = self.searchLogsTableWidget.horizontalHeader()
        for colNum in range(len(self.colsSearchLogsTable)):
            self.searchLogsTableWidget.setColumnWidth(colNum, 200)
            header.setSectionResizeMode(colNum, QtWidgets.QHeaderView.Stretch)
            self.searchLogsTableWidget.setHorizontalHeaderItem(colNum, QTableWidgetItem(self.colsSearchLogsTable[colNum]))
        for rowNum in range(totalRows):
            logEntryIdItem = QtWidgets.QTableWidgetItem(str(logEntries[rowNum].id))
            self.searchLogsTableWidget.setVerticalHeaderItem(rowNum, logEntryIdItem)
            self.searchLogsTableWidget.setRowHeight(rowNum, 50)
            logEntryDescriptionItem = QtWidgets.QTableWidgetItem(logEntries[rowNum].description)
            self.searchLogsTableWidget.setItem(rowNum, len(self.colsSearchLogsTable) - 1, logEntryDescriptionItem)
            logEntryTeamItem = QtWidgets.QTableWidgetItem(logEntryManager.logEntries[rowNum].creator)
            self.searchLogsTableWidget.setItem(rowNum, len(self.colsSearchLogsTable) - 2, logEntryTeamItem)
            logEntryDateItem = QtWidgets.QTableWidgetItem(logEntryManager.logEntries[rowNum].date)
            self.searchLogsTableWidget.setItem(rowNum, len(self.colsSearchLogsTable) - 3, logEntryDateItem)
            logEntries[rowNum].rowIndexInTable = rowNum
        self.searchLogsTableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        self.searchLogsTableWidget.doubleClicked.connect(self.searchTableDoubleClicked)

    def updateVectorTable(self, vector):
        significantEvents = list(vector.significantEvents.values())
        totalRows = len(significantEvents)
        self.vectorTableWidget.setColumnCount(len(self.colsVectorTable))
        self.vectorTableWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.vectorTableWidget.setRowCount(totalRows)
        header = self.vectorTableWidget.horizontalHeader()
        for colNum in range(len(self.colsVectorTable)):
            self.vectorTableWidget.setColumnWidth(colNum, 200)
            header.setSectionResizeMode(colNum, QtWidgets.QHeaderView.Stretch)
            self.vectorTableWidget.setHorizontalHeaderItem(colNum, QTableWidgetItem(self.colsVectorTable[colNum]))
        for rowNum in range(totalRows):
            significantEventIdItem = QtWidgets.QTableWidgetItem(str(significantEvents[rowNum].id))
            self.vectorTableWidget.setVerticalHeaderItem(rowNum, significantEventIdItem)
            self.vectorTableWidget.setRowHeight(rowNum, 50)
            significantEventDateItem = QtWidgets.QTableWidgetItem(significantEvents[rowNum].logEntry.date)
            self.vectorTableWidget.setItem(rowNum, len(self.colsVectorTable) - 3, significantEventDateItem)
            significantEventCreatorItem = QtWidgets.QTableWidgetItem(significantEvents[rowNum].logEntry.creator)
            self.vectorTableWidget.setItem(rowNum, len(self.colsVectorTable) - 2, significantEventCreatorItem)
            significantEventDescriptionItem = QtWidgets.QTableWidgetItem(significantEvents[rowNum].logEntry.description)
            self.vectorTableWidget.setItem(rowNum, len(self.colsVectorTable) - 1, significantEventDescriptionItem)
            significantEvents[rowNum].rowIndexInTable = rowNum
        self.vectorTableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        self.vectorTableWidget.doubleClicked.connect(self.vectorTableDoubleClicked)

    def updateRelationshipTable(self, vector):
        relationships = list(vector.relationships.values())
        totalRows = len(relationships)
        self.relationshipTableWidget.setColumnCount(len(self.colsRelationshipTable))
        self.relationshipTableWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.relationshipTableWidget.setRowCount(totalRows)
        header = self.relationshipTableWidget.horizontalHeader()
        for colNum in range(len(self.colsRelationshipTable)):
            self.relationshipTableWidget.setColumnWidth(colNum, 200)
            header.setSectionResizeMode(colNum, QtWidgets.QHeaderView.Stretch)
            self.relationshipTableWidget.setHorizontalHeaderItem(colNum, QTableWidgetItem(self.colsRelationshipTable[colNum]))
        for rowNum in range(totalRows):
            self.relationshipTableWidget.setRowHeight(rowNum, 50)
            relationshipIdItem = QtWidgets.QTableWidgetItem(str(relationships[rowNum].id))
            self.relationshipTableWidget.setVerticalHeaderItem(rowNum, relationshipIdItem)
            relationshipSourceItem = QtWidgets.QTableWidgetItem(str(relationships[rowNum].sourceSignificantEventId))
            self.relationshipTableWidget.setItem(rowNum, len(self.colsRelationshipTable) - 3, relationshipSourceItem)
            relationshipDestItem = QtWidgets.QTableWidgetItem(str(relationships[rowNum].destSignificantEventId))
            self.relationshipTableWidget.setItem(rowNum, len(self.colsRelationshipTable) - 2, relationshipDestItem)
            relationshipDescriptionItem = QtWidgets.QTableWidgetItem(relationships[rowNum].description)
            self.relationshipTableWidget.setItem(rowNum, len(self.colsRelationshipTable) - 1, relationshipDescriptionItem)
            relationships[rowNum].rowIndexInTable = rowNum
        self.relationshipTableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        self.relationshipTableWidget.doubleClicked.connect(self.relationshipTableDoubleClicked)

    def updateVectorGraph(self, vector):
        self.vectorGraphWidget.initializeVector(vector)
        self.vectorGraphWidget.draw()

    def searchTableDoubleClicked(self):
        global logEntryManager
        trigger = TriggerHelper()
        logEntryId = self.searchLogsTableWidget.verticalHeaderItem(self.searchLogsTableWidget.selectionModel().selectedIndexes()[0].row()).text()
        logEntryToEdit = logEntryManager.logEntries[int(logEntryId)]
        self.editPopup = LogEntryPopup(self.vectors, logEntryToEdit, trigger)
        self.editPopup.setGeometry(100, 200, 100, 100)
        self.editPopup.show()

    def vectorTableDoubleClicked(self):
        global vectorManager
        trigger = TriggerHelper()
        significantEventId = self.vectorTableWidget.verticalHeaderItem(self.vectorTableWidget.selectionModel().selectedIndexes()[0].row()).text()
        vectorName = self.vectorComboBoxTable.currentText()
        vector = vectorManager.vectors[vectorName]
        significantEventToEdit = vector.significantEvents[int(significantEventId)]
        self.editVectorPopup = SignificantEventPopup(vector, significantEventToEdit, trigger)
        self.editVectorPopup.setGeometry(100, 200, 100, 100)
        self.editVectorPopup.show()

    def relationshipTableDoubleClicked(self):
        global vectorManager
        trigger = TriggerHelper()
        relationshipId = self.relationshipTableWidget.verticalHeaderItem(self.relationshipTableWidget.selectionModel().selectedIndexes()[0].row()).text()
        vectorName = self.vectorComboBoxTable.currentText()
        vector = vectorManager.vectors[vectorName]
        relationshipToEdit = vector.relationships[int(relationshipId)]
        self.editRelationshipPopup = RelationshipPopup(vector, relationshipToEdit, trigger)
        self.editRelationshipPopup.setGeometry(100, 200, 100, 100)
        self.editRelationshipPopup.show()


    def setupMangeVectorsTab(self, PICK):
        self.manageVectorsTab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.manageVectorsTab.sizePolicy().hasHeightForWidth())
        self.manageVectorsTab.setSizePolicy(sizePolicy)
        self.manageVectorsTab.setObjectName("manageVectorsTab")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.manageVectorsTab)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(self.manageVectorsTab)
        self.widget.setObjectName("widget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.graphWidget = QtWidgets.QWidget(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphWidget.sizePolicy().hasHeightForWidth())
        self.graphWidget.setSizePolicy(sizePolicy)
        self.graphWidget.setObjectName("graphWidget")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.graphWidget)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        triggerHelper = TriggerHelper()
        triggerHelper.connectRelationshipTableTrigger()
        self.vectorGraphWidget = GraphWidget(self.graphWidget, triggerHelper)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorGraphWidget.sizePolicy().hasHeightForWidth())
        self.vectorGraphWidget.setSizePolicy(sizePolicy)
        self.vectorGraphWidget.setMinimumSize(QtCore.QSize(500, 0))
        self.vectorGraphWidget.setObjectName("vectorGraphWidget")
        self.verticalLayout_10.addWidget(self.vectorGraphWidget)
        self.graphFrame = QtWidgets.QFrame(self.graphWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphFrame.sizePolicy().hasHeightForWidth())
        self.graphFrame.setSizePolicy(sizePolicy)
        self.graphFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.graphFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.graphFrame.setObjectName("graphFrame")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.graphFrame)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.addNodeGraphButton = QtWidgets.QPushButton(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addNodeGraphButton.sizePolicy().hasHeightForWidth())
        self.addNodeGraphButton.setSizePolicy(sizePolicy)
        self.addNodeGraphButton.setObjectName("addNodeGraphButton")
        self.addNodeGraphButton.clicked.connect(self.handleAddNode)
        self.verticalLayout_9.addWidget(self.addNodeGraphButton)
        self.intervalLabel = QtWidgets.QLabel(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.intervalLabel.sizePolicy().hasHeightForWidth())
        self.intervalLabel.setSizePolicy(sizePolicy)
        self.intervalLabel.setMaximumSize(QtCore.QSize(16777215, 30))
        self.intervalLabel.setObjectName("intervalLabel")
        self.verticalLayout_9.addWidget(self.intervalLabel)
        self.intervalComboBox = QtWidgets.QComboBox(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.intervalComboBox.sizePolicy().hasHeightForWidth())
        self.intervalComboBox.setSizePolicy(sizePolicy)
        self.intervalComboBox.setObjectName("intervalComboBox")
        self.verticalLayout_9.addWidget(self.intervalComboBox)
        self.whiteTeamCheckBoxGraph = QtWidgets.QCheckBox(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.whiteTeamCheckBoxGraph.sizePolicy().hasHeightForWidth())
        self.whiteTeamCheckBoxGraph.setSizePolicy(sizePolicy)
        self.whiteTeamCheckBoxGraph.setObjectName("whiteTeamCheckBoxGraph")
        self.verticalLayout_9.addWidget(self.whiteTeamCheckBoxGraph)
        self.blueTeamCheckBoxGraph = QtWidgets.QCheckBox(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.blueTeamCheckBoxGraph.sizePolicy().hasHeightForWidth())
        self.blueTeamCheckBoxGraph.setSizePolicy(sizePolicy)
        self.blueTeamCheckBoxGraph.setObjectName("blueTeamCheckBoxGraph")
        self.verticalLayout_9.addWidget(self.blueTeamCheckBoxGraph)
        self.redTeamCheckBoxGraph = QtWidgets.QCheckBox(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.redTeamCheckBoxGraph.sizePolicy().hasHeightForWidth())
        self.redTeamCheckBoxGraph.setSizePolicy(sizePolicy)
        self.redTeamCheckBoxGraph.setObjectName("redTeamCheckBoxGraph")
        self.verticalLayout_9.addWidget(self.redTeamCheckBoxGraph)
        self.fromLabelGraph = QtWidgets.QLabel(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromLabelGraph.sizePolicy().hasHeightForWidth())
        self.fromLabelGraph.setSizePolicy(sizePolicy)
        self.fromLabelGraph.setMaximumSize(QtCore.QSize(16777215, 30))
        self.fromLabelGraph.setObjectName("fromLabelGraph")
        self.verticalLayout_9.addWidget(self.fromLabelGraph)
        self.fromTimeEditGraph = QtWidgets.QDateTimeEdit(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fromTimeEditGraph.sizePolicy().hasHeightForWidth())
        self.fromTimeEditGraph.setSizePolicy(sizePolicy)
        self.fromTimeEditGraph.setObjectName("fromTimeEditGraph")
        self.verticalLayout_9.addWidget(self.fromTimeEditGraph)
        self.toLabelGraph = QtWidgets.QLabel(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toLabelGraph.sizePolicy().hasHeightForWidth())
        self.toLabelGraph.setSizePolicy(sizePolicy)
        self.toLabelGraph.setMaximumSize(QtCore.QSize(16777215, 30))
        self.toLabelGraph.setObjectName("toLabelGraph")
        self.verticalLayout_9.addWidget(self.toLabelGraph)
        self.toTimeEditGraph = QtWidgets.QDateTimeEdit(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toTimeEditGraph.sizePolicy().hasHeightForWidth())
        self.toTimeEditGraph.setSizePolicy(sizePolicy)
        self.toTimeEditGraph.setObjectName("toTimeEditGraph")
        self.verticalLayout_9.addWidget(self.toTimeEditGraph)
        self.filterButtonGraph = QtWidgets.QPushButton(self.graphFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.filterButtonGraph.sizePolicy().hasHeightForWidth())
        self.filterButtonGraph.setSizePolicy(sizePolicy)
        self.filterButtonGraph.setObjectName("filterButtonGraph")
        self.verticalLayout_9.addWidget(self.filterButtonGraph)
        self.verticalLayout_10.addWidget(self.graphFrame)
        self.verticalLayout_7.addWidget(self.graphWidget)
        self.horizontalLayout.addWidget(self.widget)
        self.widget_2 = QtWidgets.QWidget(self.manageVectorsTab)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.vcFrame = QtWidgets.QFrame(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vcFrame.sizePolicy().hasHeightForWidth())
        self.vcFrame.setSizePolicy(sizePolicy)
        self.vcFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.vcFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.vcFrame.setObjectName("vcFrame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.vcFrame)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.pullButtonTable = QtWidgets.QPushButton(self.vcFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pullButtonTable.sizePolicy().hasHeightForWidth())
        self.pullButtonTable.setSizePolicy(sizePolicy)
        self.pullButtonTable.setObjectName("pullButtonTable")
        self.horizontalLayout_2.addWidget(self.pullButtonTable)
        self.pushButtonTable = QtWidgets.QPushButton(self.vcFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonTable.sizePolicy().hasHeightForWidth())
        self.pushButtonTable.setSizePolicy(sizePolicy)
        self.pushButtonTable.setObjectName("pushButtonTable")
        self.horizontalLayout_2.addWidget(self.pushButtonTable)
        self.commitButtonTable = QtWidgets.QPushButton(self.vcFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.commitButtonTable.sizePolicy().hasHeightForWidth())
        self.commitButtonTable.setSizePolicy(sizePolicy)
        self.commitButtonTable.setObjectName("commitButtonTable")
        self.horizontalLayout_2.addWidget(self.commitButtonTable)
        self.approveButtonTable = QtWidgets.QPushButton(self.vcFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.approveButtonTable.sizePolicy().hasHeightForWidth())
        self.approveButtonTable.setSizePolicy(sizePolicy)
        self.approveButtonTable.setObjectName("approveButtonTable")
        self.horizontalLayout_2.addWidget(self.approveButtonTable)
        self.verticalLayout_11.addWidget(self.vcFrame)
        self.vectorFrame = QtWidgets.QFrame(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorFrame.sizePolicy().hasHeightForWidth())
        self.vectorFrame.setSizePolicy(sizePolicy)
        self.vectorFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.vectorFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.vectorFrame.setObjectName("vectorFrame")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.vectorFrame)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.vectorTableLabel = QtWidgets.QLabel(self.vectorFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorTableLabel.sizePolicy().hasHeightForWidth())
        self.vectorTableLabel.setSizePolicy(sizePolicy)
        self.vectorTableLabel.setObjectName("vectorTableLabel")
        self.verticalLayout_8.addWidget(self.vectorTableLabel)
        self.vectorComboBoxTable = QtWidgets.QComboBox(self.vectorFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vectorComboBoxTable.sizePolicy().hasHeightForWidth())
        self.vectorComboBoxTable.setSizePolicy(sizePolicy)
        self.vectorComboBoxTable.setObjectName("vectorComboBoxTable")
        self.vectorComboBoxTable.view().pressed.connect(self.handleVectorComboBoxTable)
        self.verticalLayout_8.addWidget(self.vectorComboBoxTable)
        self.addNodeTableButton = QtWidgets.QPushButton(self.vectorFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addNodeTableButton.sizePolicy().hasHeightForWidth())
        self.addNodeTableButton.setSizePolicy(sizePolicy)
        self.addNodeTableButton.setObjectName("addNodeTableButton")
        self.addNodeTableButton.clicked.connect(self.handleAddNode)
        self.verticalLayout_8.addWidget(self.addNodeTableButton)
        self.exportTableButton = QtWidgets.QPushButton(self.vectorFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.exportTableButton.sizePolicy().hasHeightForWidth())
        self.exportTableButton.setSizePolicy(sizePolicy)
        self.exportTableButton.setObjectName("exportTableButton")
        self.exportTableButton.clicked.connect(self.handleExport)
        self.verticalLayout_8.addWidget(self.exportTableButton)
        self.verticalLayout_11.addWidget(self.vectorFrame)
        self.nodeTableLabel = QtWidgets.QLabel(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nodeTableLabel.sizePolicy().hasHeightForWidth())
        self.nodeTableLabel.setSizePolicy(sizePolicy)
        self.nodeTableLabel.setObjectName("nodeTableLabel")
        self.verticalLayout_11.addWidget(self.nodeTableLabel)
        self.vectorTableWidget = QtWidgets.QTableWidget(self.widget_2)
        self.vectorTableWidget.setObjectName("vectorTableWidget")
        self.vectorTableWidget.setColumnCount(0)
        self.vectorTableWidget.setRowCount(0)
        self.verticalLayout_11.addWidget(self.vectorTableWidget)
        self.relationshipTableLabel = QtWidgets.QLabel(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.relationshipTableLabel.sizePolicy().hasHeightForWidth())
        self.relationshipTableLabel.setSizePolicy(sizePolicy)
        self.relationshipTableLabel.setObjectName("relationshipTableLabel")
        self.verticalLayout_11.addWidget(self.relationshipTableLabel)
        self.relationshipTableWidget = QtWidgets.QTableWidget(self.widget_2)
        self.relationshipTableWidget.setObjectName("relationshipTableWidget")
        self.relationshipTableWidget.setColumnCount(0)
        self.relationshipTableWidget.setRowCount(0)
        self.verticalLayout_11.addWidget(self.relationshipTableWidget)
        self.horizontalLayout.addWidget(self.widget_2)
        self.tabWidget.addTab(self.manageVectorsTab, "")
        self.tabWidget.currentChanged.connect(self.onTabChange)

    def handleExport(self):
        if self.vectorComboBoxTable.count() > 0:
            self.vectorGraphWidget.export()
            self.exportVectorTable(self.vectorComboBoxTable.currentText())
            self.exportRelationshipTable(self.vectorComboBoxTable.currentText())

    def handleVectorTableEntryUpdate(self, significantEvent, vectorName):
        if significantEvent.rowIndexInTable != -1 and self.vectorComboBoxTable.count() > 0 and self.vectorComboBoxTable.currentText() == vectorName:
            significantEventDescriptionItem = QtWidgets.QTableWidgetItem(significantEvent.logEntry.description)
            self.vectorTableWidget.setItem(significantEvent.rowIndexInTable, len(self.colsVectorTable) - 1,
                                                   significantEventDescriptionItem)
    def handleSearchLogTableEntryUpdate(self, logEntry):
        if logEntry.rowIndexInTable != -1:
            logEntryDescriptionItem = QtWidgets.QTableWidgetItem(logEntry.description)
            self.searchLogsTableWidget.setItem(logEntry.rowIndexInTable, len(self.colsSearchLogsTable) - 1,
                                                   logEntryDescriptionItem)
    def handleRelationshipTableEntryUpdate(self, relationship, vectorName):
        if relationship.rowIndexInTable != -1 and self.vectorComboBoxTable.count() > 0 and self.vectorComboBoxTable.currentText() == vectorName:
            relationshipDescriptionItem = QtWidgets.QTableWidgetItem(relationship.description)
            self.relationshipTableWidget.setItem(relationship.rowIndexInTable, len(self.colsVectorTable) - 1,
                                                   relationshipDescriptionItem)

    def exportVectorTable(self, vectorName):
        filename = vectorName + "_SignificantEventTable.xls"
        wbk = xlwt.Workbook()
        sheet = wbk.add_sheet("sheet", cell_overwrite_ok=True)
        style = xlwt.XFStyle()
        font = xlwt.Font()
        font.bold = True
        style.font = font
        model = self.vectorTableWidget.model()
        for column in range(model.columnCount()):
            text = model.headerData(column, QtCore.Qt.Horizontal)
            sheet.write(0, column + 1, text, style=style)
        for row in range(model.rowCount()):
            text = model.headerData(row, QtCore.Qt.Vertical)
            sheet.write(row + 1, 0, text, style=style)
        for column in range(model.columnCount()):
            for row in range(model.rowCount()):
                text = model.data(model.index(row, column))
                sheet.write(row + 1, column + 1, text)
        wbk.save(filename)

    def exportRelationshipTable(self, vectorName):
        filename = vectorName + "_RelationshipTable.xls"
        wbk = xlwt.Workbook()
        sheet = wbk.add_sheet("sheet", cell_overwrite_ok=True)
        style = xlwt.XFStyle()
        font = xlwt.Font()
        font.bold = True
        style.font = font
        model = self.relationshipTableWidget.model()
        for column in range(model.columnCount()):
            text = model.headerData(column, QtCore.Qt.Horizontal)
            sheet.write(0, column + 1, text, style=style)
        for row in range(model.rowCount()):
            text = model.headerData(row, QtCore.Qt.Vertical)
            sheet.write(row + 1, 0, text, style=style)
        for column in range(model.columnCount()):
            for row in range(model.rowCount()):
                text = model.data(model.index(row, column))
                sheet.write(row + 1, column + 1, text)
        wbk.save(filename)

    def handleAddNode(self):
        if self.vectorComboBoxTable.count() > 0:
            vectorName = self.vectorComboBoxTable.currentText()
            global vectorManager
            global logEntryManager
            vector = vectorManager.vectors[vectorName]
            logEntry = LogEntry()
            logEntry.creator = logEntry.WHITE_TEAM
            logEntry.id = logEntryManager.nextAvailableId
            logEntryManager.nextAvailableId += 1
            logEntry.date = (datetime.datetime.today()).strftime("%m/%d/%Y %I:%M %p").lstrip("0")
            logEntry.associatedVectors.append(self.vectorComboBoxTable.currentText())
            vector.addSignificantEventFromLogEntry(logEntry)
            self.updateVectorTable(vector)
            self.updateVectorGraph(vector)

    def onTabChange(self):
        if self.tabWidget.currentIndex() == self.tabWidget.indexOf(self.manageVectorsTab) and self.vectorComboBoxTable.count() > 0:
            vectorName = self.vectorComboBoxTable.currentText()
            global vectorManager
            vector = vectorManager.vectors[vectorName]
            self.updateVectorTable(vector)
            self.updateRelationshipTable(vector)
            self.updateVectorGraph(vector)

    def handleRelationshipTableTrigger(self):
        if self.vectorComboBoxTable.count() > 0:
            vectorName = self.vectorComboBoxTable.currentText()
            global vectorManager
            vector = vectorManager.vectors[vectorName]
            self.updateRelationshipTable(vector)

    def handleVectorGraphTrigger(self):
        if self.vectorComboBoxTable.count() > 0:
            vectorName = self.vectorComboBoxTable.currentText()
            global vectorManager
            vector = vectorManager.vectors[vectorName]
            self.updateVectorGraph(vector)

    def updateVectorComboBoxes(self):
        vectorNames = (vectorManager.vectors.keys())
        self.vectorComboBoxIngestion.clear()
        self.vectorComboBoxTable.clear()
        for vectorName in vectorNames:
            self.vectorComboBoxIngestion.addItem(vectorName)
            self.vectorComboBoxTable.addItem(vectorName)

    def setupUi(self, PICK):
        PICK.setObjectName("PICK")
        PICK.resize(2500, 1750)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(PICK.sizePolicy().hasHeightForWidth())
        PICK.setSizePolicy(sizePolicy)
        PICK.setMaximumSize(QtCore.QSize(16777215, 3000))
        PICK.setMinimumSize(QtCore.QSize(0, 900))

        # Table column names
        self.colsSearchLogsTable = ["Time of Event", "Creator", "Description"]
        self.colsVectorTable = ["Time Of Event", "Creator", "Description"]
        self.colsRelationshipTable = ["Parent", "Child", "Description"]

        # Vector list
        self.vectors = list()
        # Initialization of vector list
        global vectorManager
        global logEntryManager
        logEntryManager.vectorManager = vectorManager
        self.vectors = list(vectorManager.vectors.values())

        self.setupMainWindow(PICK)
        self.setupTabWidget(PICK)
        self.setupIngestionTab(PICK)
        self.setupSearchLogsTab(PICK)
        logEntryManager.searchLogEntryTableWidget = self.searchLogsTableWidget
        logEntryManager.colNamesInSearchLogsTable = self.colsSearchLogsTable
        self.updateLogTable()
        self.setupMangeVectorsTab(PICK)
        self.updateVectorComboBoxes()

        self.verticalLayout.addWidget(self.tabWidget)
        PICK.setCentralWidget(self.mainWindow)
        self.retranslateUi(PICK)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(PICK)

    def retranslateUi(self, PICK):
        _translate = QtCore.QCoreApplication.translate
        PICK.setWindowTitle(_translate("PICK", "PICK Tool"))
        self.setupLabel.setText(_translate("PICK", "SETUP"))
        self.rootPathLabel.setText(_translate("PICK", "Root path:"))
        self.confirmPathButton.setText(_translate("PICK", "Confirm Root Path"))
        self.setLeadButton.setText(_translate("PICK", "Set This Machine As Lead"))
        self.vectorInformationLabel.setText(_translate("PICK", "VECTOR INFORMATION"))
        self.vectorNameLabel.setText(_translate("PICK", "Vector Name:"))
        self.vectorDescriptionLabel.setText(_translate("PICK", "Description:"))
        self.deleteVectorButton.setText(_translate("PICK", "Delete Current Vector"))
        self.editVectorButton.setText(_translate("PICK", "Edit Current Vector"))
        self.addVectorButton.setText(_translate("PICK", "Add New Vector"))
        self.eventConfigurationLabel.setText(_translate("PICK", "EVENT CONFIGURATION"))
        self.fromEventConfigurationLabel.setText(_translate("PICK", "From:"))
        self.toEventConfigurationLabel.setText(_translate("PICK", "To:"))
        self.teamSubdirectoryNamesLabel.setText(_translate("PICK", "Team Subdirectory Names:"))
        self.redTeamEventConfigLabel.setText(_translate("PICK", "Red:"))
        self.whiteTeamEventConfigLabel.setText(_translate("PICK", "White:"))
        self.blueTeamEventConfigLabel.setText(_translate("PICK", "Blue:"))
        self.viewInvalidLogsButton.setText(_translate("PICK", "View Invalid Log Files"))
        self.updateEventConfigButton.setText(_translate("PICK", "Update Event Config"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.ingestionTab), _translate("PICK", "Ingestion"))
        self.commandSearchLabel.setText(_translate("PICK", "Command Search:"))
        self.teamSearchLabel.setText(_translate("PICK", "Team:"))
        self.blueTeamCheckBox.setText(_translate("PICK", "Blue Team"))
        self.whiteTeamCheckBox.setText(_translate("PICK", "White Team"))
        self.redTeamCheckBox.setText(_translate("PICK", "Red Team"))
        self.fromSearchLabel.setText(_translate("PICK", "From:"))
        self.toSearchLabel.setText(_translate("PICK", "To:"))
        self.searchButton.setText(_translate("PICK", "Search"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.searchLogsTab), _translate("PICK", "Search Logs"))
        self.addNodeGraphButton.setText(_translate("PICK", "Add Node"))
        self.intervalLabel.setText(_translate("PICK", "Interval:"))
        self.whiteTeamCheckBoxGraph.setText(_translate("PICK", "White Team"))
        self.blueTeamCheckBoxGraph.setText(_translate("PICK", "Blue Team"))
        self.redTeamCheckBoxGraph.setText(_translate("PICK", "Red Team"))
        self.fromLabelGraph.setText(_translate("PICK", "From:"))
        self.toLabelGraph.setText(_translate("PICK", "To:"))
        self.filterButtonGraph.setText(_translate("PICK", "Filter"))
        self.pullButtonTable.setText(_translate("PICK", "Pull"))
        self.pushButtonTable.setText(_translate("PICK", "Push"))
        self.commitButtonTable.setText(_translate("PICK", "Commit"))
        self.approveButtonTable.setText(_translate("PICK", "Approve"))
        self.vectorTableLabel.setText(_translate("PICK", "Vector:"))
        self.addNodeTableButton.setText(_translate("PICK", "Add Node"))
        self.exportTableButton.setText(_translate("PICK", "Export Vector"))
        self.nodeTableLabel.setText(_translate("PICK", "Nodes:"))
        self.relationshipTableLabel.setText(_translate("PICK", "Relationships:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.manageVectorsTab), _translate("PICK", "Manage Vectors"))


class TriggerHelper(QObject):
    updateRelationshipTableTrigger = pyqtSignal()
    updateVectorGraphTrigger = pyqtSignal()
    updateVectorTableEntryTrigger = pyqtSignal()
    updateSearchLogTableEntryTrigger = pyqtSignal()
    updateRelationshipTableEntryTrigger = pyqtSignal()
    updateVectorTableTrigger = pyqtSignal()

    def connectRelationshipTableTrigger(self):
        self.updateRelationshipTableTrigger.connect(ui.handleRelationshipTableTrigger)

    def connectVectorGraphTrigger(self):
        self.updateVectorGraphTrigger.connect(ui.handleVectorGraphTrigger)

    def connectVectorTableTrigger(self):
        self.updateVectorTableTrigger.connect(ui.onTabChange)

    def connectVectorTableEntryTrigger(self, significantEvent, vectorName):
        self.updateVectorTableEntryTrigger.connect(lambda: ui.handleVectorTableEntryUpdate(significantEvent, vectorName))

    def connectSearchLogTableEntryTrigger(self, logEntry):
        self.updateSearchLogTableEntryTrigger.connect(lambda: ui.handleSearchLogTableEntryUpdate(logEntry))

    def connectRelationshipTableEntryTrigger(self, logEntry, vectorName):
        self.updateRelationshipTableEntryTrigger.connect(lambda: ui.handleRelationshipTableEntryUpdate(logEntry, vectorName))

    def emitVectorGraphTrigger(self):
        self.updateVectorGraphTrigger.emit()

    def emitRelationshipTableTrigger(self):
        self.updateRelationshipTableTrigger.emit()

    def emitRelationshipTableEntryTrigger(self):
        self.updateRelationshipTableEntryTrigger.emit()

    def emitVectorTableTrigger(self):
        self.updateVectorTableTrigger.emit()

    def emitVectorTableEntryTrigger(self):
        self.updateVectorTableEntryTrigger.emit()

    def emitSearchLogTableEntryTrigger(self):
        self.updateSearchLogTableEntryTrigger.emit()
        print()

if __name__ == "__main__":
    print()
    app = QtWidgets.QApplication(sys.argv)
    PICK = QtWidgets.QMainWindow()
    ui = Ui_PICK()
    ui.setupUi(PICK)
    PICK.show()
    print()
    sys.exit(app.exec_())
